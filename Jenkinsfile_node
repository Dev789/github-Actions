node {
  stage('SCM') {
    checkout scm
  }
  stage('SonarQube Analysis') {
    def scannerHome = tool 'SonarScanner';
    withSonarQubeEnv() {
      sh "${scannerHome}/bin/sonar-scanner"
    }
  }
  stage('Quality Gate Status Check') {
    timeout(time: 1, unit: 'HOURS') {
      def qg = waitForQualityGate()
      if (qg.status != 'OK') {
        error "Pipeline aborted due to quality gate failure: ${qg.status}"
      }
    }
  }
}

pipeline {
  agent {label 'docker-agent'}
  stages {
    stage ('Building image') {
      steps {
        script {
          sh "docker build --no-cache -t django ."
        }
      }
    }
    stage ('Deploy') {
      steps {
        sshagent(credentials : ['49b60861-eff7-4293-b734-b2f731870ed7']) {
          sh """
            #!/bin/bash
            ssh -t -o StrictHostKeyChecking=no desktop-48@9.9.9.123 << EOF
            cd /home/desktop-48/vishal/projects_test/django
            docker compose down
            docker compose up -d
            << EOF
            """
        }
      }
    }
  }
}